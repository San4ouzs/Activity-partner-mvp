
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  passwordHash  String
  displayName   String
  latitude      Float?
  longitude     Float?
  radiusKm      Float?   @default(5)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  activities    UserActivity[]
  conversations ConversationParticipant[]
  messages      Message[]
}

model Activity {
  id       Int    @id @default(autoincrement())
  key      String @unique
  label    String
  users    UserActivity[]
}

model UserActivity {
  id         Int     @id @default(autoincrement())
  userId     String
  activityId Int
  user       User     @relation(fields: [userId], references: [id])
  activity   Activity @relation(fields: [activityId], references: [id])
  @@unique([userId, activityId])
}

model Conversation {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  participants  ConversationParticipant[]
  messages      Message[]
}

model ConversationParticipant {
  id             Int    @id @default(autoincrement())
  conversationId String
  userId         String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  user           User         @relation(fields: [userId], references: [id])
  @@unique([conversationId, userId])
}

model Message {
  id             String   @id @default(cuid())
  conversationId String
  senderId       String
  body           String
  createdAt      DateTime @default(now())
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  sender         User         @relation(fields: [senderId], references: [id])
}
